[{"path":[]},{"path":"/articles/aa-examples.html","id":"table-of-contents","dir":"Articles","previous_headings":"Examples gallery","what":"Table of Contents","title":"Examples gallery","text":"Simply export data frame xlsx file Export list several data frames xlsx file (data frame different sheet) Export data frame xlsx file (merging modalities one column) Export data frame xlsx file (merging modalities several columns) Export list several data frames xlsx file (several data frames sheet) Export list data frames named xlsx file specifying data frame goes sheet, styling column, giving title footnotesâ€¦ Letâ€™s define export folder examples page Important : vignette, examples use %>% pass object argument toxlsx() function, works interchangeably 3 syntaxes :","code":"mypath <- tempdir() toxlsx(object = iris, path = mypath) iris |> toxlsx(path = mypath) iris %>% toxlsx(path = mypath)"},{"path":"/articles/aa-examples.html","id":"simply-export-a-data-frame-to-an-xlsx-file","dir":"Articles","previous_headings":"Examples gallery","what":"1. Simply export a data frame to an xlsx file","title":"Examples gallery","text":"Preview xlsx file LibreOffice Calc :","code":"iris %>% toxlsx(path = mypath)"},{"path":"/articles/aa-examples.html","id":"export-a-list-of-several-data-frames-to-an-xlsx-file-each-data-frame-in-a-different-sheet","dir":"Articles","previous_headings":"Examples gallery","what":"2. Export a list of several data frames to an xlsx file (each data frame in a different sheet)","title":"Examples gallery","text":"Preview xlsx file LibreOffice Calc :","code":"list(iris,cars) %>% toxlsx(path = mypath)"},{"path":"/articles/aa-examples.html","id":"export-a-data-frame-to-an-xlsx-file-merging-modalities-for-one-column","dir":"Articles","previous_headings":"Examples gallery","what":"3. Export a data frame to an xlsx file (merging modalities for one column)","title":"Examples gallery","text":"Preview xlsx file LibreOffice Calc :","code":"# Create df1 df1 <- data.frame(   group = c(\"dupont\",\"dupont\",\"arnold\",\"arnold\"),   name = c(\"toto\",\"tata\",\"tutu\",\"tete\"),   volume = c(10,8,12,15) ) #  Export df1 %>% toxlsx(path = mypath, mergecol = \"group\")"},{"path":"/articles/aa-examples.html","id":"export-a-data-frame-to-an-xlsx-file-merging-modalities-for-several-columns","dir":"Articles","previous_headings":"Examples gallery","what":"4. Export a data frame to an xlsx file (merging modalities for several columns)","title":"Examples gallery","text":"Preview xlsx file LibreOffice Calc :","code":"# Create df2 df2 <- data.frame(   country = c(rep(\"france\",4),rep(\"england\",4)),   group = c(rep(\"dupont\",2),rep(\"martin\",2),             rep(\"arnold\",2),rep(\"harry\",2)),   name = c(\"toto\",\"tata\",\"tutu\",\"tete\",            \"momo\",\"mama\",\"mumu\",\"meme\"),   volume = c(10,8,12,15,              14,10,5,12) ) #  Export df2 %>% toxlsx(path = mypath, mergecol = c(\"country\",\"group\"))"},{"path":"/articles/aa-examples.html","id":"export-a-list-of-several-data-frames-to-an-xlsx-file-several-data-frames-in-a-same-sheet","dir":"Articles","previous_headings":"Examples gallery","what":"5. Export a list of several data frames to an xlsx file (several data frames in a same sheet)","title":"Examples gallery","text":"Preview xlsx file LibreOffice Calc :","code":"tb1 <- data.frame(tables = c(rep(\"iris\",5),rep(\"cars\",2)),                   var = c(names(iris),names(cars)))  tb2 <- data.frame(tables = c(\"iris\",\"cars\",\"cars\"),                   rownumber = c(150,50,32))  list(tb1,tb2) %>%   toxlsx(tosheet = list(\"tb1\" = \"mydata\",                         \"tb2\" = \"mydata\"),          footnote1 = list(\"tb1\" = \"The data set contains 3 classes of 50 instances each, where each class refers to a type of iris plant.\",                           \"tb2\" = \"The data give the speed of cars and the distances taken to stop. Note that the data were recorded in the 1920s.\"),          footnote2 = list(\"tb1\" = \"Predicted attribute: class of iris plant.\",                           \"tb2\" = \"Data recorded in the 1920s\"),          footnote3 = list(\"tb1\" = \"Source : R.A. Fisher\",                           \"tb2\" = \"Source : M. Ezekiel\"),          path=mypath)"},{"path":"/articles/aa-examples.html","id":"export-a-list-of-data-frames-to-an-named-xlsx-file-by-specifying-which-data-frame-goes-in-which-sheet-styling-each-column-giving-a-title-and-footnotes","dir":"Articles","previous_headings":"Examples gallery","what":"6. Export a list of data frames to an named xlsx file by specifying which data frame goes in which sheet, styling each column, giving a title and footnotesâ€¦","title":"Examples gallery","text":"equivalent {openxlsx} syntax much longer painful write. See equivalent sixth example. Preview xlsx file LibreOffice Calc :","code":"iris <- iris %>% head() cars <- cars %>% head()  list(iris,cars) %>%   toxlsx(tosheet = list(\"iris\" = \"first\",                         \"cars\" = \"second\"),          title = list(\"iris\" = \"Head of iris\",                       \"cars\" = \"Head of cars\"),          # The `columnstyle` argument is optional in toxlsx().           # It is used only if you want to specify the format of each column          columnstyle = list(\"iris\" = list(\"c1\" = \"decimal\",                                           \"c2\" = \"decimal\",                                           \"c3\" = \"number\",                                           \"c4\" = \"number\",                                           \"c5\" = \"character\"),                             \"cars\" =  list(\"c1\" = \"number\",                                            \"c2\" = \"number\")),          footnote1 = list(\"iris\" = \"The data set contains 3 classes of 50 instances each, where each class refers to a type of iris plant.\",                            \"cars\" = \"The data give the speed of cars and the distances taken to stop. Note that the data were recorded in the 1920s.\"),          footnote2 = list(\"iris\" = \"Predicted attribute: class of iris plant.\",                            \"cars\" = \"Data recorded in the 1920s\"),          footnote3 = list(\"iris\" = \"Source : R.A. Fisher\",                            \"cars\" = \"Source : M. Ezekiel\"),          filename = \"Results\",          path = mypath)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Damien Dotta. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dotta D (2023). tablexlsx: Export Data Frames xlsx Workbook. R package version 0.1.0.","code":"@Manual{,   title = {tablexlsx: Export Data Frames to xlsx Workbook},   author = {Damien Dotta},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"package-package-tablexlsx-","dir":"","previous_headings":"","what":"Export Data Frames to xlsx Workbook","title":"Export Data Frames to xlsx Workbook","text":"R package allows export data frames R xslx workbooks.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Export Data Frames to xlsx Workbook","text":"","code":"remotes::install_github(\"ddotta/tablexlsx\") library(tablexlsx)"},{"path":"/index.html","id":"why-this-package-","dir":"","previous_headings":"","what":"Why this package ?","title":"Export Data Frames to xlsx Workbook","text":"package wrapper functions great openxlsx package. purpose package meet needs R users want export data frames xlsx files share data results users necessarily R users. goal get API simple possible use. â€™s intended meet needs users want create clean, well-documented xlsx files (title footnotes). package improved time include new features based needs expressed users. , feel free open issue .","code":""},{"path":"/index.html","id":"advantages","dir":"","previous_headings":"","what":"Advantages","title":"Export Data Frames to xlsx Workbook","text":"advantages using package : simpler syntax common export operations excel files; can write several data frames sheet one ; can merge modalities one several columns; can automatically open files soon created can inspect workbook. Data frames exported xlsx files can passed argument functions simple tables list tables. main function package toxlsx() works interchangeably %>% |> operators 3 syntaxes equivalent : ðŸ‘‰ , see examples gallery vignette","code":"toxlsx(object = iris, path = mypath) iris |> toxlsx(path = mypath) iris %>% toxlsx(path = mypath)"},{"path":"/reference/add_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds a data frame to an (existing) .xlsx workbook sheet â€” add_table","title":"Function that adds a data frame to an (existing) .xlsx workbook sheet â€” add_table","text":"Function adds data frame (existing) .xlsx workbook sheet","code":""},{"path":"/reference/add_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds a data frame to an (existing) .xlsx workbook sheet â€” add_table","text":"","code":"add_table(   Table,   WbTitle,   SheetTitle,   TableTitle,   StartRow = 1,   StartCol = 1,   FormatList = list(),   HeightTableTitle = 2,   TableFootnote1 = list(),   TableFootnote2 = list(),   TableFootnote3 = list() )"},{"path":"/reference/add_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds a data frame to an (existing) .xlsx workbook sheet â€” add_table","text":"Table : data frame exported workbook sheet WbTitle : workbook SheetTitle : string used sheet's name TableTitle : string used data frame's title StartRow : export start line number sheet (default 1) StartCol : export start column number sheet (default 1) FormatList : list indicates format column data frame HeightTableTitle : multiplier (needed) height title line (default 2) TableFootnote1 : string TableFootnote1 TableFootnote2 : string TableFootnote2 TableFootnote3 : string TableFootnote3","code":""},{"path":"/reference/add_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that adds a data frame to an (existing) .xlsx workbook sheet â€” add_table","text":"excel wb object","code":""},{"path":"/reference/calcskippedrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function that returns the number of rows that need to be skipped\nto correctly account for previous data frames already present in the sheet â€” calcskippedrow","title":"Utility function that returns the number of rows that need to be skipped\nto correctly account for previous data frames already present in the sheet â€” calcskippedrow","text":"Utility function returns number rows need skipped correctly account previous data frames already present sheet","code":""},{"path":"/reference/calcskippedrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function that returns the number of rows that need to be skipped\nto correctly account for previous data frames already present in the sheet â€” calcskippedrow","text":"","code":"calcskippedrow(mylist, x)"},{"path":"/reference/calcskippedrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function that returns the number of rows that need to be skipped\nto correctly account for previous data frames already present in the sheet â€” calcskippedrow","text":"mylist list data frames x number","code":""},{"path":"/reference/calcskippedrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function that returns the number of rows that need to be skipped\nto correctly account for previous data frames already present in the sheet â€” calcskippedrow","text":"","code":"if (FALSE) { mydf <- list(iris,cars,mtcars) calcskippedrow(mylist=mydf,x=1) # return 0 calcskippedrow(mylist=mydf,x=2) # return 150 calcskippedrow(mylist=mydf,x=3) # return 200 (150 rows of iris + 50 of cars) calcskippedrow(mylist=mydf,x=4) # return 232 }"},{"path":"/reference/calcstartrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function that returns start row to correctly separate df written in a same sheet â€” calcstartrow","title":"Utility function that returns start row to correctly separate df written in a same sheet â€” calcstartrow","text":"Utility function returns start row correctly separate df written sheet","code":""},{"path":"/reference/calcstartrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function that returns start row to correctly separate df written in a same sheet â€” calcstartrow","text":"","code":"calcstartrow(x)"},{"path":"/reference/calcstartrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function that returns start row to correctly separate df written in a same sheet â€” calcstartrow","text":"x number","code":""},{"path":"/reference/calcstartrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function that returns start row to correctly separate df written in a same sheet â€” calcstartrow","text":"","code":"if (FALSE) { calcstartrow(1) # return 1 calcstartrow(2) # return 11 calcstartrow(3) # return 21 }"},{"path":"/reference/convert_range_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function that takes converts a string representing\na range of numbers (e.g. ","title":"Utility function that takes converts a string representing\na range of numbers (e.g. ","text":"Utility function takes converts string representing range numbers (e.g. \"1:3\") vector numbers","code":""},{"path":"/reference/convert_range_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function that takes converts a string representing\na range of numbers (e.g. ","text":"","code":"convert_range_string(range_string)"},{"path":"/reference/convert_range_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function that takes converts a string representing\na range of numbers (e.g. ","text":"range_string string representing range numbers","code":""},{"path":"/reference/convert_range_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function that takes converts a string representing\na range of numbers (e.g. ","text":"vector numbers","code":""},{"path":"/reference/convert_range_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function that takes converts a string representing\na range of numbers (e.g. ","text":"","code":"if (FALSE) { convert_range_string(\"1:3\") #' # Output: # [1] 1 2 3 }"},{"path":"/reference/get_indices_from_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function that takes a vector as input and returns\nthe indices of the first and last element. â€” get_indices_from_vector","title":"Utility function that takes a vector as input and returns\nthe indices of the first and last element. â€” get_indices_from_vector","text":"Utility function takes vector input returns indices first last element.","code":""},{"path":"/reference/get_indices_from_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function that takes a vector as input and returns\nthe indices of the first and last element. â€” get_indices_from_vector","text":"","code":"get_indices_from_vector(vector)"},{"path":"/reference/get_indices_from_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function that takes a vector as input and returns\nthe indices of the first and last element. â€” get_indices_from_vector","text":"vector vector","code":""},{"path":"/reference/get_indices_from_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function that takes a vector as input and returns\nthe indices of the first and last element. â€” get_indices_from_vector","text":"","code":"if (FALSE) { myvector <- c(\"momo\",\"momo\",\"momo\",\"mumu\",\"mumu\") get_indices_from_vector(myvector) #' # Output: # [1] \"1:5\" }"},{"path":"/reference/get_indices_of_identical_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function that takes a vector as input and returns\nthe indices of the elements in the vector that are identical. â€” get_indices_of_identical_elements","title":"Utility function that takes a vector as input and returns\nthe indices of the elements in the vector that are identical. â€” get_indices_of_identical_elements","text":"Utility function takes vector input returns indices elements vector identical.","code":""},{"path":"/reference/get_indices_of_identical_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function that takes a vector as input and returns\nthe indices of the elements in the vector that are identical. â€” get_indices_of_identical_elements","text":"","code":"get_indices_of_identical_elements(vector)"},{"path":"/reference/get_indices_of_identical_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function that takes a vector as input and returns\nthe indices of the elements in the vector that are identical. â€” get_indices_of_identical_elements","text":"vector vector","code":""},{"path":"/reference/get_indices_of_identical_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function that takes a vector as input and returns\nthe indices of the elements in the vector that are identical. â€” get_indices_of_identical_elements","text":"","code":"if (FALSE) { myvector <- c(\"momo\",\"momo\",\"momo\",\"mumu\",\"mumu\") get_indices_of_identical_elements(myvector) #' # Output: # [1] \"1:3\" \"4:5\" }"},{"path":"/reference/style.html","id":null,"dir":"Reference","previous_headings":"","what":"An R list that contains the styles of each element for formatting data frames in excel files â€” style","title":"An R list that contains the styles of each element for formatting data frames in excel files â€” style","text":"R list contains styles element formatting data frames excel files","code":""},{"path":"/reference/style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An R list that contains the styles of each element for formatting data frames in excel files â€” style","text":"","code":"style"},{"path":"/reference/style.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An R list that contains the styles of each element for formatting data frames in excel files â€” style","text":"list several items title Style title footnote1 Style footnote1 footnote2 Style footnote2 footnote3 Style footnote3 col_header Style col_header character Style columns character format number Style columns number format decimal Style columns character format decimals percent Style columns percent format","code":""},{"path":"/reference/toxlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert R data frames to excel files â€” toxlsx","title":"Convert R data frames to excel files â€” toxlsx","text":"function allows write R data frames given `object` argument excel files located `path` directory. function takes several arguments two required `object` `path`.","code":""},{"path":"/reference/toxlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert R data frames to excel files â€” toxlsx","text":"","code":"toxlsx(   object,   tosheet = list(),   title = list(),   columnstyle = list(default = NULL),   footnote1 = list(),   footnote2 = list(),   footnote3 = list(),   mergecol = NULL,   path,   filename = \"Export\",   automaticopen = FALSE )"},{"path":"/reference/toxlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert R data frames to excel files â€” toxlsx","text":"object data.frame converted excel tosheet list sheet names element object. omitted, sheets named default \"Sheet 1\", \"Sheet 2\"... title list title element object omitted, title takes name dataframe `object` columnstyle list style columns element object useful want customise style column ` footnote1 list footnote1 element object omitted, footnote1 footnote2 list footnote2 element object omitted, footnote2 footnote3 list footnote3 element object omitted, footnote3 mergecol character vector indicates columns want merge modalities path path save excel file filename name excel file (\"Export\" default) automaticopen logical indicating excel file open automatically (FALSE default)","code":""},{"path":"/reference/toxlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert R data frames to excel files â€” toxlsx","text":"excel file","code":""},{"path":[]},{"path":"/news/index.html","id":"tablexlsx-010","dir":"Changelog","previous_headings":"","what":"tablexlsx 0.1.0","title":"tablexlsx 0.1.0","text":"Setting pkgdown website first vignette Added toxlsx() function convert data frames excel files Added add_table() function add data frames workbook Added NEWS.md file track changes package.","code":""}]
